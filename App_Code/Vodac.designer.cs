#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Vodac")]
public partial class VodacDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertBranch(Branch instance);
  partial void UpdateBranch(Branch instance);
  partial void DeleteBranch(Branch instance);
  partial void InsertRetailer(Retailer instance);
  partial void UpdateRetailer(Retailer instance);
  partial void DeleteRetailer(Retailer instance);
  partial void InsertAction(Action instance);
  partial void UpdateAction(Action instance);
  partial void DeleteAction(Action instance);
  partial void InsertAuditLog(AuditLog instance);
  partial void UpdateAuditLog(AuditLog instance);
  partial void DeleteAuditLog(AuditLog instance);
  partial void InsertUser(User instance);
  partial void UpdateUser(User instance);
  partial void DeleteUser(User instance);
  partial void InsertProduct(Product instance);
  partial void UpdateProduct(Product instance);
  partial void DeleteProduct(Product instance);
  partial void InsertAccessory(Accessory instance);
  partial void UpdateAccessory(Accessory instance);
  partial void DeleteAccessory(Accessory instance);
  partial void InsertOrderHistory(OrderHistory instance);
  partial void UpdateOrderHistory(OrderHistory instance);
  partial void DeleteOrderHistory(OrderHistory instance);
  partial void InsertLink_Product_Accessory(Link_Product_Accessory instance);
  partial void UpdateLink_Product_Accessory(Link_Product_Accessory instance);
  partial void DeleteLink_Product_Accessory(Link_Product_Accessory instance);
  #endregion
	
	public VodacDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["VodacConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public VodacDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public VodacDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public VodacDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public VodacDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Branch> Branches
	{
		get
		{
			return this.GetTable<Branch>();
		}
	}
	
	public System.Data.Linq.Table<Retailer> Retailers
	{
		get
		{
			return this.GetTable<Retailer>();
		}
	}
	
	public System.Data.Linq.Table<Action> Actions
	{
		get
		{
			return this.GetTable<Action>();
		}
	}
	
	public System.Data.Linq.Table<AuditLog> AuditLogs
	{
		get
		{
			return this.GetTable<AuditLog>();
		}
	}
	
	public System.Data.Linq.Table<User> Users
	{
		get
		{
			return this.GetTable<User>();
		}
	}
	
	public System.Data.Linq.Table<Product> Products
	{
		get
		{
			return this.GetTable<Product>();
		}
	}
	
	public System.Data.Linq.Table<Accessory> Accessories
	{
		get
		{
			return this.GetTable<Accessory>();
		}
	}
	
	public System.Data.Linq.Table<OrderHistory> OrderHistories
	{
		get
		{
			return this.GetTable<OrderHistory>();
		}
	}
	
	public System.Data.Linq.Table<Link_Product_Accessory> Link_Product_Accessories
	{
		get
		{
			return this.GetTable<Link_Product_Accessory>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Branch")]
public partial class Branch : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _RetailerId;
	
	private string _StoreCode;
	
	private string _LAccount;
	
	private System.Nullable<bool> _StoreType;
	
	private EntityRef<Retailer> _Retailer;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRetailerIdChanging(int value);
    partial void OnRetailerIdChanged();
    partial void OnStoreCodeChanging(string value);
    partial void OnStoreCodeChanged();
    partial void OnLAccountChanging(string value);
    partial void OnLAccountChanged();
    partial void OnStoreTypeChanging(System.Nullable<bool> value);
    partial void OnStoreTypeChanged();
    #endregion
	
	public Branch()
	{
		this._Retailer = default(EntityRef<Retailer>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="BranchID", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="RetailerID", Storage="_RetailerId", DbType="Int NOT NULL")]
	public int RetailerId
	{
		get
		{
			return this._RetailerId;
		}
		set
		{
			if ((this._RetailerId != value))
			{
				this.OnRetailerIdChanging(value);
				this.SendPropertyChanging();
				this._RetailerId = value;
				this.SendPropertyChanged("RetailerId");
				this.OnRetailerIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreCode", DbType="VarChar(50)")]
	public string StoreCode
	{
		get
		{
			return this._StoreCode;
		}
		set
		{
			if ((this._StoreCode != value))
			{
				this.OnStoreCodeChanging(value);
				this.SendPropertyChanging();
				this._StoreCode = value;
				this.SendPropertyChanged("StoreCode");
				this.OnStoreCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LAccount", DbType="VarChar(50)")]
	public string LAccount
	{
		get
		{
			return this._LAccount;
		}
		set
		{
			if ((this._LAccount != value))
			{
				this.OnLAccountChanging(value);
				this.SendPropertyChanging();
				this._LAccount = value;
				this.SendPropertyChanged("LAccount");
				this.OnLAccountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreType", DbType="Bit")]
	public System.Nullable<bool> StoreType
	{
		get
		{
			return this._StoreType;
		}
		set
		{
			if ((this._StoreType != value))
			{
				this.OnStoreTypeChanging(value);
				this.SendPropertyChanging();
				this._StoreType = value;
				this.SendPropertyChanged("StoreType");
				this.OnStoreTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Retailer_Branch", Storage="_Retailer", ThisKey="RetailerId", OtherKey="Id", IsForeignKey=true)]
	public Retailer Retailer
	{
		get
		{
			return this._Retailer.Entity;
		}
		set
		{
			Retailer previousValue = this._Retailer.Entity;
			if (((previousValue != value) 
						|| (this._Retailer.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Retailer.Entity = null;
					previousValue.Branches.Remove(this);
				}
				this._Retailer.Entity = value;
				if ((value != null))
				{
					value.Branches.Add(this);
					this._RetailerId = value.Id;
				}
				else
				{
					this._RetailerId = default(int);
				}
				this.SendPropertyChanged("Retailer");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Retailer")]
public partial class Retailer : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Ean;
	
	private string _Name;
	
	private bool _IsLive;
	
	private bool _ReceiveMail;
	
	private string _EmailAddress;
	
	private string _DAccount;
	
	private string _RetVatNr;
	
	private bool _SendsBundles;
	
	private EntitySet<Branch> _Branches;
	
	private EntitySet<OrderHistory> _OrderHistories;
	
	private EntitySet<Link_Product_Accessory> _Link_Product_Accessories;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEanChanging(string value);
    partial void OnEanChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsLiveChanging(bool value);
    partial void OnIsLiveChanged();
    partial void OnReceiveMailChanging(bool value);
    partial void OnReceiveMailChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnDAccountChanging(string value);
    partial void OnDAccountChanged();
    partial void OnRetVatNrChanging(string value);
    partial void OnRetVatNrChanged();
    partial void OnSendsBundlesChanging(bool value);
    partial void OnSendsBundlesChanged();
    #endregion
	
	public Retailer()
	{
		this._Branches = new EntitySet<Branch>(new Action<Branch>(this.attach_Branches), new Action<Branch>(this.detach_Branches));
		this._OrderHistories = new EntitySet<OrderHistory>(new Action<OrderHistory>(this.attach_OrderHistories), new Action<OrderHistory>(this.detach_OrderHistories));
		this._Link_Product_Accessories = new EntitySet<Link_Product_Accessory>(new Action<Link_Product_Accessory>(this.attach_Link_Product_Accessories), new Action<Link_Product_Accessory>(this.detach_Link_Product_Accessories));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="RetailerID", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="RetailerEAN", Storage="_Ean", DbType="VarChar(14) NOT NULL", CanBeNull=false)]
	public string Ean
	{
		get
		{
			return this._Ean;
		}
		set
		{
			if ((this._Ean != value))
			{
				this.OnEanChanging(value);
				this.SendPropertyChanging();
				this._Ean = value;
				this.SendPropertyChanged("Ean");
				this.OnEanChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="RetailerName", Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLive", DbType="Bit NOT NULL")]
	public bool IsLive
	{
		get
		{
			return this._IsLive;
		}
		set
		{
			if ((this._IsLive != value))
			{
				this.OnIsLiveChanging(value);
				this.SendPropertyChanging();
				this._IsLive = value;
				this.SendPropertyChanged("IsLive");
				this.OnIsLiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiveMail", DbType="Bit NOT NULL")]
	public bool ReceiveMail
	{
		get
		{
			return this._ReceiveMail;
		}
		set
		{
			if ((this._ReceiveMail != value))
			{
				this.OnReceiveMailChanging(value);
				this.SendPropertyChanging();
				this._ReceiveMail = value;
				this.SendPropertyChanged("ReceiveMail");
				this.OnReceiveMailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
	public string EmailAddress
	{
		get
		{
			return this._EmailAddress;
		}
		set
		{
			if ((this._EmailAddress != value))
			{
				this.OnEmailAddressChanging(value);
				this.SendPropertyChanging();
				this._EmailAddress = value;
				this.SendPropertyChanged("EmailAddress");
				this.OnEmailAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DAccount", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string DAccount
	{
		get
		{
			return this._DAccount;
		}
		set
		{
			if ((this._DAccount != value))
			{
				this.OnDAccountChanging(value);
				this.SendPropertyChanging();
				this._DAccount = value;
				this.SendPropertyChanged("DAccount");
				this.OnDAccountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetVatNr", DbType="VarChar(50)")]
	public string RetVatNr
	{
		get
		{
			return this._RetVatNr;
		}
		set
		{
			if ((this._RetVatNr != value))
			{
				this.OnRetVatNrChanging(value);
				this.SendPropertyChanging();
				this._RetVatNr = value;
				this.SendPropertyChanged("RetVatNr");
				this.OnRetVatNrChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendsBundles", DbType="Bit NOT NULL")]
	public bool SendsBundles
	{
		get
		{
			return this._SendsBundles;
		}
		set
		{
			if ((this._SendsBundles != value))
			{
				this.OnSendsBundlesChanging(value);
				this.SendPropertyChanging();
				this._SendsBundles = value;
				this.SendPropertyChanged("SendsBundles");
				this.OnSendsBundlesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Retailer_Branch", Storage="_Branches", ThisKey="Id", OtherKey="RetailerId")]
	public EntitySet<Branch> Branches
	{
		get
		{
			return this._Branches;
		}
		set
		{
			this._Branches.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Retailer_OrderHistory", Storage="_OrderHistories", ThisKey="Ean", OtherKey="RetailerEan")]
	public EntitySet<OrderHistory> OrderHistories
	{
		get
		{
			return this._OrderHistories;
		}
		set
		{
			this._OrderHistories.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Retailer_Link_Product_Accessory", Storage="_Link_Product_Accessories", ThisKey="Id", OtherKey="RetailerId")]
	public EntitySet<Link_Product_Accessory> Link_Product_Accessories
	{
		get
		{
			return this._Link_Product_Accessories;
		}
		set
		{
			this._Link_Product_Accessories.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Branches(Branch entity)
	{
		this.SendPropertyChanging();
		entity.Retailer = this;
	}
	
	private void detach_Branches(Branch entity)
	{
		this.SendPropertyChanging();
		entity.Retailer = null;
	}
	
	private void attach_OrderHistories(OrderHistory entity)
	{
		this.SendPropertyChanging();
		entity.Retailer = this;
	}
	
	private void detach_OrderHistories(OrderHistory entity)
	{
		this.SendPropertyChanging();
		entity.Retailer = null;
	}
	
	private void attach_Link_Product_Accessories(Link_Product_Accessory entity)
	{
		this.SendPropertyChanging();
		entity.Retailer = this;
	}
	
	private void detach_Link_Product_Accessories(Link_Product_Accessory entity)
	{
		this.SendPropertyChanging();
		entity.Retailer = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Action")]
public partial class Action : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Value;
	
	private EntitySet<AuditLog> _AuditLogs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
	
	public Action()
	{
		this._AuditLogs = new EntitySet<AuditLog>(new Action<AuditLog>(this.attach_AuditLogs), new Action<AuditLog>(this.detach_AuditLogs));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
	public string Value
	{
		get
		{
			return this._Value;
		}
		set
		{
			if ((this._Value != value))
			{
				this.OnValueChanging(value);
				this.SendPropertyChanging();
				this._Value = value;
				this.SendPropertyChanged("Value");
				this.OnValueChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Action_AuditLog", Storage="_AuditLogs", ThisKey="Id", OtherKey="ActionId")]
	public EntitySet<AuditLog> AuditLogs
	{
		get
		{
			return this._AuditLogs;
		}
		set
		{
			this._AuditLogs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_AuditLogs(AuditLog entity)
	{
		this.SendPropertyChanging();
		entity.Action = this;
	}
	
	private void detach_AuditLogs(AuditLog entity)
	{
		this.SendPropertyChanging();
		entity.Action = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AuditLog")]
public partial class AuditLog : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _LAccount;
	
	private string _StoreCode;
	
	private System.DateTime _CreatedAt;
	
	private int _UserId;
	
	private int _RetailerId;
	
	private int _ActionId;
	
	private string _PreviousStoreCode;
	
	private string _PreviousLAccount;
	
	private int _BranchId;
	
	private EntityRef<User> _User;
	
	private EntityRef<Action> _Action;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLAccountChanging(string value);
    partial void OnLAccountChanged();
    partial void OnStoreCodeChanging(string value);
    partial void OnStoreCodeChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnRetailerIdChanging(int value);
    partial void OnRetailerIdChanged();
    partial void OnActionIdChanging(int value);
    partial void OnActionIdChanged();
    partial void OnPreviousStoreCodeChanging(string value);
    partial void OnPreviousStoreCodeChanged();
    partial void OnPreviousLAccountChanging(string value);
    partial void OnPreviousLAccountChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    #endregion
	
	public AuditLog()
	{
		this._User = default(EntityRef<User>);
		this._Action = default(EntityRef<Action>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LAccount", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
	public string LAccount
	{
		get
		{
			return this._LAccount;
		}
		set
		{
			if ((this._LAccount != value))
			{
				this.OnLAccountChanging(value);
				this.SendPropertyChanging();
				this._LAccount = value;
				this.SendPropertyChanged("LAccount");
				this.OnLAccountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
	public string StoreCode
	{
		get
		{
			return this._StoreCode;
		}
		set
		{
			if ((this._StoreCode != value))
			{
				this.OnStoreCodeChanging(value);
				this.SendPropertyChanging();
				this._StoreCode = value;
				this.SendPropertyChanged("StoreCode");
				this.OnStoreCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
	public System.DateTime CreatedAt
	{
		get
		{
			return this._CreatedAt;
		}
		set
		{
			if ((this._CreatedAt != value))
			{
				this.OnCreatedAtChanging(value);
				this.SendPropertyChanging();
				this._CreatedAt = value;
				this.SendPropertyChanged("CreatedAt");
				this.OnCreatedAtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
	public int UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				if (this._User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetailerId", DbType="Int NOT NULL")]
	public int RetailerId
	{
		get
		{
			return this._RetailerId;
		}
		set
		{
			if ((this._RetailerId != value))
			{
				this.OnRetailerIdChanging(value);
				this.SendPropertyChanging();
				this._RetailerId = value;
				this.SendPropertyChanged("RetailerId");
				this.OnRetailerIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionId", DbType="Int NOT NULL")]
	public int ActionId
	{
		get
		{
			return this._ActionId;
		}
		set
		{
			if ((this._ActionId != value))
			{
				if (this._Action.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnActionIdChanging(value);
				this.SendPropertyChanging();
				this._ActionId = value;
				this.SendPropertyChanged("ActionId");
				this.OnActionIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousStoreCode", DbType="NVarChar(20)")]
	public string PreviousStoreCode
	{
		get
		{
			return this._PreviousStoreCode;
		}
		set
		{
			if ((this._PreviousStoreCode != value))
			{
				this.OnPreviousStoreCodeChanging(value);
				this.SendPropertyChanging();
				this._PreviousStoreCode = value;
				this.SendPropertyChanged("PreviousStoreCode");
				this.OnPreviousStoreCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousLAccount", DbType="NVarChar(20)")]
	public string PreviousLAccount
	{
		get
		{
			return this._PreviousLAccount;
		}
		set
		{
			if ((this._PreviousLAccount != value))
			{
				this.OnPreviousLAccountChanging(value);
				this.SendPropertyChanging();
				this._PreviousLAccount = value;
				this.SendPropertyChanged("PreviousLAccount");
				this.OnPreviousLAccountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId")]
	public int BranchId
	{
		get
		{
			return this._BranchId;
		}
		set
		{
			if ((this._BranchId != value))
			{
				this.OnBranchIdChanging(value);
				this.SendPropertyChanging();
				this._BranchId = value;
				this.SendPropertyChanged("BranchId");
				this.OnBranchIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_AuditLog", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
	public User User
	{
		get
		{
			return this._User.Entity;
		}
		set
		{
			User previousValue = this._User.Entity;
			if (((previousValue != value) 
						|| (this._User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._User.Entity = null;
					previousValue.AuditLogs.Remove(this);
				}
				this._User.Entity = value;
				if ((value != null))
				{
					value.AuditLogs.Add(this);
					this._UserId = value.Id;
				}
				else
				{
					this._UserId = default(int);
				}
				this.SendPropertyChanged("User");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Action_AuditLog", Storage="_Action", ThisKey="ActionId", OtherKey="Id", IsForeignKey=true)]
	public Action Action
	{
		get
		{
			return this._Action.Entity;
		}
		set
		{
			Action previousValue = this._Action.Entity;
			if (((previousValue != value) 
						|| (this._Action.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Action.Entity = null;
					previousValue.AuditLogs.Remove(this);
				}
				this._Action.Entity = value;
				if ((value != null))
				{
					value.AuditLogs.Add(this);
					this._ActionId = value.Id;
				}
				else
				{
					this._ActionId = default(int);
				}
				this.SendPropertyChanged("Action");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserLogin")]
public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private string _Password;
	
	private string _Email;
	
	private EntitySet<AuditLog> _AuditLogs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
	
	public User()
	{
		this._AuditLogs = new EntitySet<AuditLog>(new Action<AuditLog>(this.attach_AuditLogs), new Action<AuditLog>(this.detach_AuditLogs));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="UserID", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="UserName", Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="UserPassword", Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="UserEmail", Storage="_Email", CanBeNull=false)]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_AuditLog", Storage="_AuditLogs", ThisKey="Id", OtherKey="UserId")]
	public EntitySet<AuditLog> AuditLogs
	{
		get
		{
			return this._AuditLogs;
		}
		set
		{
			this._AuditLogs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_AuditLogs(AuditLog entity)
	{
		this.SendPropertyChanging();
		entity.User = this;
	}
	
	private void detach_AuditLogs(AuditLog entity)
	{
		this.SendPropertyChanging();
		entity.User = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Warehouse;
	
	private string _ProductCode;
	
	private string _Barcode;
	
	private string _Description;
	
	private System.Nullable<System.DateTime> _LastUpdate;
	
	private EntitySet<Link_Product_Accessory> _Link_Product_Accessories;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnWarehouseChanging(string value);
    partial void OnWarehouseChanged();
    partial void OnProductCodeChanging(string value);
    partial void OnProductCodeChanged();
    partial void OnBarcodeChanging(string value);
    partial void OnBarcodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnLastUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateChanged();
    #endregion
	
	public Product()
	{
		this._Link_Product_Accessories = new EntitySet<Link_Product_Accessory>(new Action<Link_Product_Accessory>(this.attach_Link_Product_Accessories), new Action<Link_Product_Accessory>(this.detach_Link_Product_Accessories));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ProductID", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Warehouse", DbType="VarChar(50)")]
	public string Warehouse
	{
		get
		{
			return this._Warehouse;
		}
		set
		{
			if ((this._Warehouse != value))
			{
				this.OnWarehouseChanging(value);
				this.SendPropertyChanging();
				this._Warehouse = value;
				this.SendPropertyChanged("Warehouse");
				this.OnWarehouseChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCode", DbType="VarChar(50)")]
	public string ProductCode
	{
		get
		{
			return this._ProductCode;
		}
		set
		{
			if ((this._ProductCode != value))
			{
				this.OnProductCodeChanging(value);
				this.SendPropertyChanging();
				this._ProductCode = value;
				this.SendPropertyChanged("ProductCode");
				this.OnProductCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="VarChar(50)")]
	public string Barcode
	{
		get
		{
			return this._Barcode;
		}
		set
		{
			if ((this._Barcode != value))
			{
				this.OnBarcodeChanging(value);
				this.SendPropertyChanging();
				this._Barcode = value;
				this.SendPropertyChanged("Barcode");
				this.OnBarcodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(250)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdate", DbType="DateTime")]
	public System.Nullable<System.DateTime> LastUpdate
	{
		get
		{
			return this._LastUpdate;
		}
		set
		{
			if ((this._LastUpdate != value))
			{
				this.OnLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._LastUpdate = value;
				this.SendPropertyChanged("LastUpdate");
				this.OnLastUpdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Link_Product_Accessory", Storage="_Link_Product_Accessories", ThisKey="Id", OtherKey="ProductId")]
	public EntitySet<Link_Product_Accessory> Link_Product_Accessories
	{
		get
		{
			return this._Link_Product_Accessories;
		}
		set
		{
			this._Link_Product_Accessories.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Link_Product_Accessories(Link_Product_Accessory entity)
	{
		this.SendPropertyChanging();
		entity.Product = this;
	}
	
	private void detach_Link_Product_Accessories(Link_Product_Accessory entity)
	{
		this.SendPropertyChanging();
		entity.Product = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Accessory")]
public partial class Accessory : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _ProductCode;
	
	private string _Description;
	
	private System.DateTime _LastUpdate;
	
	private EntitySet<Link_Product_Accessory> _Link_Product_Accessories;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProductCodeChanging(string value);
    partial void OnProductCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnLastUpdateChanging(System.DateTime value);
    partial void OnLastUpdateChanged();
    #endregion
	
	public Accessory()
	{
		this._Link_Product_Accessories = new EntitySet<Link_Product_Accessory>(new Action<Link_Product_Accessory>(this.attach_Link_Product_Accessories), new Action<Link_Product_Accessory>(this.detach_Link_Product_Accessories));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="AccessoryID", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string ProductCode
	{
		get
		{
			return this._ProductCode;
		}
		set
		{
			if ((this._ProductCode != value))
			{
				this.OnProductCodeChanging(value);
				this.SendPropertyChanging();
				this._ProductCode = value;
				this.SendPropertyChanged("ProductCode");
				this.OnProductCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime LastUpdate
	{
		get
		{
			return this._LastUpdate;
		}
		set
		{
			if ((this._LastUpdate != value))
			{
				this.OnLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._LastUpdate = value;
				this.SendPropertyChanged("LastUpdate");
				this.OnLastUpdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accessory_Link_Product_Accessory", Storage="_Link_Product_Accessories", ThisKey="Id", OtherKey="AccessoryId")]
	public EntitySet<Link_Product_Accessory> Link_Product_Accessories
	{
		get
		{
			return this._Link_Product_Accessories;
		}
		set
		{
			this._Link_Product_Accessories.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Link_Product_Accessories(Link_Product_Accessory entity)
	{
		this.SendPropertyChanging();
		entity.Accessory = this;
	}
	
	private void detach_Link_Product_Accessories(Link_Product_Accessory entity)
	{
		this.SendPropertyChanging();
		entity.Accessory = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.audit_log")]
public partial class OrderHistory : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _RetailerEan;
	
	private string _StoreCode;
	
	private string _LAccount;
	
	private string _OrderNumber;
	
	private System.Nullable<System.DateTime> _OrderDate;
	
	private string _InvoiceNumber;
	
	private System.Nullable<System.DateTime> _InvoiceDate;
	
	private string _InvoiceAmount;
	
	private EntityRef<Retailer> _Retailer;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRetailerEanChanging(string value);
    partial void OnRetailerEanChanged();
    partial void OnStoreCodeChanging(string value);
    partial void OnStoreCodeChanged();
    partial void OnLAccountChanging(string value);
    partial void OnLAccountChanged();
    partial void OnOrderNumberChanging(string value);
    partial void OnOrderNumberChanged();
    partial void OnOrderDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOrderDateChanged();
    partial void OnInvoiceNumberChanging(string value);
    partial void OnInvoiceNumberChanged();
    partial void OnInvoiceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInvoiceDateChanged();
    partial void OnInvoiceAmountChanging(string value);
    partial void OnInvoiceAmountChanged();
    #endregion
	
	public OrderHistory()
	{
		this._Retailer = default(EntityRef<Retailer>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="AUID", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="AUcRetailer", Storage="_RetailerEan", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string RetailerEan
	{
		get
		{
			return this._RetailerEan;
		}
		set
		{
			if ((this._RetailerEan != value))
			{
				this.OnRetailerEanChanging(value);
				this.SendPropertyChanging();
				this._RetailerEan = value;
				this.SendPropertyChanged("RetailerEan");
				this.OnRetailerEanChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="AUcStoreCode", Storage="_StoreCode", DbType="VarChar(50)")]
	public string StoreCode
	{
		get
		{
			return this._StoreCode;
		}
		set
		{
			if ((this._StoreCode != value))
			{
				this.OnStoreCodeChanging(value);
				this.SendPropertyChanging();
				this._StoreCode = value;
				this.SendPropertyChanged("StoreCode");
				this.OnStoreCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="AUcLAccount", Storage="_LAccount", DbType="VarChar(50)")]
	public string LAccount
	{
		get
		{
			return this._LAccount;
		}
		set
		{
			if ((this._LAccount != value))
			{
				this.OnLAccountChanging(value);
				this.SendPropertyChanging();
				this._LAccount = value;
				this.SendPropertyChanged("LAccount");
				this.OnLAccountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="AUcOrderNumber", Storage="_OrderNumber", DbType="VarChar(50)")]
	public string OrderNumber
	{
		get
		{
			return this._OrderNumber;
		}
		set
		{
			if ((this._OrderNumber != value))
			{
				this.OnOrderNumberChanging(value);
				this.SendPropertyChanging();
				this._OrderNumber = value;
				this.SendPropertyChanged("OrderNumber");
				this.OnOrderNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="AUdOrderDate", Storage="_OrderDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> OrderDate
	{
		get
		{
			return this._OrderDate;
		}
		set
		{
			if ((this._OrderDate != value))
			{
				this.OnOrderDateChanging(value);
				this.SendPropertyChanging();
				this._OrderDate = value;
				this.SendPropertyChanged("OrderDate");
				this.OnOrderDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="AUcInvoiceNumber", Storage="_InvoiceNumber", DbType="VarChar(50)")]
	public string InvoiceNumber
	{
		get
		{
			return this._InvoiceNumber;
		}
		set
		{
			if ((this._InvoiceNumber != value))
			{
				this.OnInvoiceNumberChanging(value);
				this.SendPropertyChanging();
				this._InvoiceNumber = value;
				this.SendPropertyChanged("InvoiceNumber");
				this.OnInvoiceNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="AUdInvoiceDate", Storage="_InvoiceDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> InvoiceDate
	{
		get
		{
			return this._InvoiceDate;
		}
		set
		{
			if ((this._InvoiceDate != value))
			{
				this.OnInvoiceDateChanging(value);
				this.SendPropertyChanging();
				this._InvoiceDate = value;
				this.SendPropertyChanged("InvoiceDate");
				this.OnInvoiceDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="AUcInvoiceAmt", Storage="_InvoiceAmount", DbType="VarChar(50)")]
	public string InvoiceAmount
	{
		get
		{
			return this._InvoiceAmount;
		}
		set
		{
			if ((this._InvoiceAmount != value))
			{
				this.OnInvoiceAmountChanging(value);
				this.SendPropertyChanging();
				this._InvoiceAmount = value;
				this.SendPropertyChanged("InvoiceAmount");
				this.OnInvoiceAmountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Retailer_OrderHistory", Storage="_Retailer", ThisKey="RetailerEan", OtherKey="Ean", IsForeignKey=true)]
	public Retailer Retailer
	{
		get
		{
			return this._Retailer.Entity;
		}
		set
		{
			Retailer previousValue = this._Retailer.Entity;
			if (((previousValue != value) 
						|| (this._Retailer.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Retailer.Entity = null;
					previousValue.OrderHistories.Remove(this);
				}
				this._Retailer.Entity = value;
				if ((value != null))
				{
					value.OrderHistories.Add(this);
					this._RetailerEan = value.Ean;
				}
				else
				{
					this._RetailerEan = default(string);
				}
				this.SendPropertyChanged("Retailer");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Link_Product_Accessory")]
public partial class Link_Product_Accessory : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _RetailerId;
	
	private int _ProductId;
	
	private int _AccessoryId;
	
	private EntityRef<Accessory> _Accessory;
	
	private EntityRef<Product> _Product;
	
	private EntityRef<Retailer> _Retailer;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRetailerIdChanging(int value);
    partial void OnRetailerIdChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnAccessoryIdChanging(int value);
    partial void OnAccessoryIdChanged();
    #endregion
	
	public Link_Product_Accessory()
	{
		this._Accessory = default(EntityRef<Accessory>);
		this._Product = default(EntityRef<Product>);
		this._Retailer = default(EntityRef<Retailer>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="LinkID", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="RetailerID", Storage="_RetailerId", DbType="Int NOT NULL")]
	public int RetailerId
	{
		get
		{
			return this._RetailerId;
		}
		set
		{
			if ((this._RetailerId != value))
			{
				this.OnRetailerIdChanging(value);
				this.SendPropertyChanging();
				this._RetailerId = value;
				this.SendPropertyChanged("RetailerId");
				this.OnRetailerIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ProductID", Storage="_ProductId", DbType="Int NOT NULL")]
	public int ProductId
	{
		get
		{
			return this._ProductId;
		}
		set
		{
			if ((this._ProductId != value))
			{
				this.OnProductIdChanging(value);
				this.SendPropertyChanging();
				this._ProductId = value;
				this.SendPropertyChanged("ProductId");
				this.OnProductIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="AccessoryID", Storage="_AccessoryId", DbType="Int NOT NULL")]
	public int AccessoryId
	{
		get
		{
			return this._AccessoryId;
		}
		set
		{
			if ((this._AccessoryId != value))
			{
				this.OnAccessoryIdChanging(value);
				this.SendPropertyChanging();
				this._AccessoryId = value;
				this.SendPropertyChanged("AccessoryId");
				this.OnAccessoryIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accessory_Link_Product_Accessory", Storage="_Accessory", ThisKey="AccessoryId", OtherKey="Id", IsForeignKey=true)]
	public Accessory Accessory
	{
		get
		{
			return this._Accessory.Entity;
		}
		set
		{
			Accessory previousValue = this._Accessory.Entity;
			if (((previousValue != value) 
						|| (this._Accessory.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Accessory.Entity = null;
					previousValue.Link_Product_Accessories.Remove(this);
				}
				this._Accessory.Entity = value;
				if ((value != null))
				{
					value.Link_Product_Accessories.Add(this);
					this._AccessoryId = value.Id;
				}
				else
				{
					this._AccessoryId = default(int);
				}
				this.SendPropertyChanged("Accessory");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Link_Product_Accessory", Storage="_Product", ThisKey="ProductId", OtherKey="Id", IsForeignKey=true)]
	public Product Product
	{
		get
		{
			return this._Product.Entity;
		}
		set
		{
			Product previousValue = this._Product.Entity;
			if (((previousValue != value) 
						|| (this._Product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Product.Entity = null;
					previousValue.Link_Product_Accessories.Remove(this);
				}
				this._Product.Entity = value;
				if ((value != null))
				{
					value.Link_Product_Accessories.Add(this);
					this._ProductId = value.Id;
				}
				else
				{
					this._ProductId = default(int);
				}
				this.SendPropertyChanged("Product");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Retailer_Link_Product_Accessory", Storage="_Retailer", ThisKey="RetailerId", OtherKey="Id", IsForeignKey=true)]
	public Retailer Retailer
	{
		get
		{
			return this._Retailer.Entity;
		}
		set
		{
			Retailer previousValue = this._Retailer.Entity;
			if (((previousValue != value) 
						|| (this._Retailer.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Retailer.Entity = null;
					previousValue.Link_Product_Accessories.Remove(this);
				}
				this._Retailer.Entity = value;
				if ((value != null))
				{
					value.Link_Product_Accessories.Add(this);
					this._RetailerId = value.Id;
				}
				else
				{
					this._RetailerId = default(int);
				}
				this.SendPropertyChanged("Retailer");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
